name: Shared Build Workflow

on:
  workflow_call:
    outputs:
      preview_url:
        description: "URL of the preview deployment (if applicable)"
        value: ${{ jobs.build.outputs.preview_url }}
    inputs:
      deploy_to_surge:
        required: false
        type: boolean
        default: false
      pr_number:
        required: false
        type: number
        default: 0
    secrets:
      SURGE_TOKEN:
        required: false
      SURGE_LOGIN:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.set_preview_url.outputs.preview_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js with PNPM 
        uses: actions/setup-node@v4
        with:
          node-version: 23

      # - name: Cache .vite
      #   uses: actions/cache@v4
      #   with:
      #     path: node_modules/.vite
      #     key: ${{ runner.os }}-vite-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('astro.config.mjs', 'tsconfig.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-vite-${{ hashFiles('pnpm-lock.yaml') }}-
      #       ${{ runner.os }}-vite-

      # - name: Cache Astro build output
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       dist/
      #       .astro/
      #     key: ${{ runner.os }}-astro-build-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-astro-build-${{ hashFiles('pnpm-lock.yaml') }}-
      #       ${{ runner.os }}-astro-build-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build site
        run: pnpm build

      # First set the preview URL so it's available throughout the workflow
      - name: Set Preview URL
        id: set_preview_url
        if: inputs.deploy_to_surge
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          DOMAIN="pr-${{ inputs.pr_number }}-${REPO_NAME}.surge.sh"
          echo "preview_url=https://${DOMAIN}" >> $GITHUB_OUTPUT
          echo "domain=${DOMAIN}" >> $GITHUB_OUTPUT

      # # Conditional steps for Surge deployment
      # - name: Cache Surge packages
      #   if: inputs.deploy_to_surge
      #   uses: actions/cache@v4
      #   id: surge-cache
      #   with:
      #     path: node_modules/.pnpm/surge
      #     key: ${{ runner.os }}-pnpm-surge-${{ hashFiles('pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-surge-

      - name: Deploy to Surge using script
        if: inputs.deploy_to_surge
        env:
          PR_NUMBER: ${{ inputs.pr_number }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
        run: |
          # Debug info
          echo "Deploying PR #$PR_NUMBER"
          
          # Make script executable
          chmod +x ./scripts/surge-deploy.sh
          
          # Execute the deploy script with quoted parameters to handle special characters
          ./scripts/surge-deploy.sh deploy "$PR_NUMBER" "$SURGE_TOKEN" "$SURGE_LOGIN"

      # GitHub Pages artifact preparation (only for main branch)
      - name: Setup Pages
        if: ${{ !inputs.deploy_to_surge }}
        id: pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for GitHub Pages
        if: ${{ !inputs.deploy_to_surge }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
