name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  preview:
    runs-on: ubuntu-latest
    # Skip running on closed PR events
    if: github.event.action != 'closed'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js with PNPM cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Cache .vite
        uses: actions/cache@v4
        with:
          path: node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('astro.config.mjs', 'tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('pnpm-lock.yaml') }}-
            ${{ runner.os }}-vite-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build site
        run: pnpm build

      - name: Deploy to Surge for Preview
        id: deploy-surge
        uses: afc163/surge-preview@v1
        with:
          surge_token: ${{ secrets.SURGE_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dist: dist
          build: echo "Skip build"  # Build already done in previous step

      - name: Get Preview URL
        run: echo "Preview URL is ${{ steps.deploy-surge.outputs.preview_url }}"

  teardown:
    runs-on: ubuntu-latest
    # Only run on closed PR events
    if: github.event.action == 'closed'
    steps:
      - name: Generate preview domain
        id: preview-domain
        run: |
          PR_NUMBER="${{ github.event.number }}"
          REPO_NAME=$(echo "${{ github.repository }}" | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')
          PREVIEW_DOMAIN="${REPO_NAME}-preview-pr-${PR_NUMBER}.surge.sh"
          echo "domain=${PREVIEW_DOMAIN}" >> $GITHUB_OUTPUT
          echo "Preview domain: ${PREVIEW_DOMAIN}"

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Teardown Surge deployment
        id: teardown
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
          PREVIEW_DOMAIN: ${{ steps.preview-domain.outputs.domain }}
        run: |
          echo "Attempting to teardown ${PREVIEW_DOMAIN}"
          pnpm dlx surge teardown ${PREVIEW_DOMAIN} --token ${SURGE_TOKEN}
        continue-on-error: true

      - name: List current deployments
        if: steps.teardown.outcome == 'failure'
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        run: pnpm dlx surge list --token ${SURGE_TOKEN}
